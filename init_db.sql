-- ============================================
-- NIS3351 智能家居监控系统数据库初始化脚本
-- 使用方法：gsql -d smart_home -h 127.0.0.1 -p 7654 -U lzp -W password -f init_db.sql
-- ============================================

-- 注意：数据库 smart_home 应该已经存在
-- 如果需要创建数据库，请使用管理员账户执行：CREATE DATABASE smart_home;

-- 1. 创建温湿度传感器数据表
SELECT 'Creating table: temperature_humidity_data...' AS status;

CREATE TABLE IF NOT EXISTS temperature_humidity_data (
    id SERIAL PRIMARY KEY,
    device_id VARCHAR(50) NOT NULL,
    temperature FLOAT NOT NULL,
    humidity FLOAT NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 4. 创建索引
SELECT 'Creating indexes...' AS status;

CREATE INDEX IF NOT EXISTS idx_temp_hum_timestamp 
ON temperature_humidity_data(timestamp DESC);

CREATE INDEX IF NOT EXISTS idx_temp_hum_device 
ON temperature_humidity_data(device_id);

-- 5. 插入测试数据（已移除 room1 和 room2 的测试数据）
SELECT 'Test data initialization skipped - data will be generated by simulators' AS status;

-- 6. 显示表结构
SELECT 'Table structure:' AS status;
\d temperature_humidity_data

-- 7. 显示数据统计
SELECT 'Data statistics:' AS status;
SELECT 
    device_id,
    COUNT(*) as data_count,
    ROUND(AVG(temperature)::numeric, 2) as avg_temp,
    ROUND(AVG(humidity)::numeric, 2) as avg_humidity
FROM temperature_humidity_data
GROUP BY device_id;

-- 8. 显示最近的数据
SELECT 'Recent data:' AS status;
SELECT * FROM temperature_humidity_data 
ORDER BY timestamp DESC 
LIMIT 10;

-- 9. 智慧门锁：单把大门锁的表结构
SELECT 'Creating tables for smart lock...' AS status;

-- 当前锁状态表
CREATE TABLE IF NOT EXISTS lock_state (
    lock_id VARCHAR(50) PRIMARY KEY,
    locked BOOLEAN NOT NULL,
    method VARCHAR(20),                 -- 开锁方式：PINCODE/FINGERPRINT/FACE
    actor VARCHAR(64),                 
    battery INTEGER DEFAULT 100,        -- 电量百分比
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 锁事件流水表（审计）
CREATE TABLE IF NOT EXISTS lock_events (
    id SERIAL PRIMARY KEY,
    lock_id VARCHAR(50) NOT NULL,
    event_type VARCHAR(32) NOT NULL,    -- lock/unlock/unlock_success/unlock_fail/tamper/etc
    method VARCHAR(20),                 -- 使用方式
    actor VARCHAR(64),                  -- 操作人
    detail TEXT,                        -- 其他信息
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_lock_events_lock_time
ON lock_events(lock_id, timestamp DESC);

-- 初始化一把大门锁的状态（仅在不存在时插入）
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM lock_state WHERE lock_id = 'FRONT_DOOR') THEN
        INSERT INTO lock_state (lock_id, locked, method, actor, battery)
        VALUES ('FRONT_DOOR', TRUE, NULL, NULL, 100);
    END IF;
END $$;

-- 插入示例事件
INSERT INTO lock_events (lock_id, event_type, method, actor, detail)
VALUES ('FRONT_DOOR', 'INIT', NULL, NULL, 'Initialized with LOCKED=TRUE');

-- 门锁用户认证表
CREATE TABLE IF NOT EXISTS lock_users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    pincode VARCHAR(10) NOT NULL,
    face_image_path VARCHAR(255),
    fingerprint_data TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 自动锁定配置表
CREATE TABLE IF NOT EXISTS lock_auto_config (
    lock_id VARCHAR(50) PRIMARY KEY,
    auto_lock_enabled BOOLEAN DEFAULT true,
    auto_lock_delay INTEGER DEFAULT 5,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 10. 空调控制：智能空调表结构
SELECT 'Creating tables for air conditioner...' AS status;

-- 空调状态表
CREATE TABLE IF NOT EXISTS ac_state (
    ac_id VARCHAR(50) PRIMARY KEY,
    device_id VARCHAR(50) NOT NULL,
    power BOOLEAN DEFAULT false,
    mode VARCHAR(20) DEFAULT 'cool',        -- cool/heat/fan/dehumidify
    target_temp FLOAT DEFAULT 26.0,
    current_temp FLOAT,
    current_humidity FLOAT,
    fan_speed VARCHAR(20) DEFAULT 'auto',   -- auto/low/medium/high
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 空调事件表（操作历史）
CREATE TABLE IF NOT EXISTS ac_events (
    id SERIAL PRIMARY KEY,
    ac_id VARCHAR(50) NOT NULL,
    event_type VARCHAR(32) NOT NULL,        -- power_on/power_off/temp_change/mode_change
    old_value TEXT,
    new_value TEXT,
    detail TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_ac_events_ac_time
ON ac_events(ac_id, timestamp DESC);

-- 初始化空调状态（统一房间命名）
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM ac_state WHERE ac_id = 'ac_living_room') THEN
        INSERT INTO ac_state (ac_id, device_id, power, mode, target_temp, fan_speed)
        VALUES ('ac_living_room', 'living_room', false, 'cool', 26.0, 'auto');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM ac_state WHERE ac_id = 'ac_bedroom1') THEN
        INSERT INTO ac_state (ac_id, device_id, power, mode, target_temp, fan_speed)
        VALUES ('ac_bedroom1', 'bedroom1', false, 'cool', 26.0, 'auto');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM ac_state WHERE ac_id = 'ac_bedroom2') THEN
        INSERT INTO ac_state (ac_id, device_id, power, mode, target_temp, fan_speed)
        VALUES ('ac_bedroom2', 'bedroom2', false, 'cool', 26.0, 'auto');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM ac_state WHERE ac_id = 'ac_kitchen') THEN
        INSERT INTO ac_state (ac_id, device_id, power, mode, target_temp, fan_speed)
        VALUES ('ac_kitchen', 'kitchen', false, 'cool', 26.0, 'auto');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM ac_state WHERE ac_id = 'ac_study') THEN
        INSERT INTO ac_state (ac_id, device_id, power, mode, target_temp, fan_speed)
        VALUES ('ac_study', 'study', false, 'cool', 26.0, 'auto');
    END IF;
END $$;

-- 插入初始化事件
INSERT INTO ac_events (ac_id, event_type, detail)
VALUES
    ('ac_living_room', 'INIT', 'Air conditioner initialized'),
    ('ac_bedroom1', 'INIT', 'Air conditioner initialized'),
    ('ac_bedroom2', 'INIT', 'Air conditioner initialized'),
    ('ac_kitchen', 'INIT', 'Air conditioner initialized'),
    ('ac_study', 'INIT', 'Air conditioner initialized');

-- 全屋灯具控制：智能灯具表结构
SELECT 'Creating tables for smart lighting...' AS status;

-- 灯具状态表
CREATE TABLE IF NOT EXISTS lighting_state (
    light_id VARCHAR(50) PRIMARY KEY,
    device_id VARCHAR(50) NOT NULL,
    power BOOLEAN DEFAULT false,
    brightness INTEGER DEFAULT 50,           -- 亮度百分比 0-100
    auto_mode BOOLEAN DEFAULT false,         -- 智能调节模式
    room_brightness FLOAT,                   -- 房间亮度传感器读数
    color_temp INTEGER DEFAULT 4000,         -- 色温 (K)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 灯具事件表（操作历史）
CREATE TABLE IF NOT EXISTS lighting_events (
    id SERIAL PRIMARY KEY,
    light_id VARCHAR(50) NOT NULL,
    event_type VARCHAR(32) NOT NULL,          -- power_on/power_off/brightness_change/auto_mode_change
    old_value TEXT,
    new_value TEXT,
    detail TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 11. 房间管理：统一的房间表（作为核心关联表）
SELECT 'Creating rooms table...' AS status;

CREATE TABLE IF NOT EXISTS rooms (
    room_id VARCHAR(50) PRIMARY KEY,
    room_name VARCHAR(100) NOT NULL,
    floor INTEGER DEFAULT 1,
    area FLOAT,                                 -- 面积（平方米）
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 初始化房间数据（统一命名：living_room, bedroom1, bedroom2, kitchen, study）
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'living_room') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('living_room', '客厅', 1, 35.5, '主要活动区域');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'bedroom1') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('bedroom1', '主卧', 1, 20.0, '主卧室');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'bedroom2') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('bedroom2', '次卧', 1, 15.0, '次卧室');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'kitchen') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('kitchen', '厨房', 1, 12.0, '烹饪区域');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'study') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('study', '书房', 1, 18.0, '学习工作空间');
    END IF;

    -- 可选：添加更多房间
    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'balcony') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('balcony', '阳台', 1, 8.0, '休闲晾晒区域');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'bathroom') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('bathroom', '卫生间', 1, 6.0, '洗浴区域');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM rooms WHERE room_id = 'dining_room') THEN
        INSERT INTO rooms (room_id, room_name, floor, area, description)
        VALUES ('dining_room', '餐厅', 1, 15.0, '用餐区域');
    END IF;
END $$;

-- 12. 烟雾报警器：智能烟雾报警器表结构（增强版）
SELECT 'Creating tables for smoke alarm...' AS status;

-- 烟雾报警器状态表（增强版）
CREATE TABLE IF NOT EXISTS smoke_alarm_state (
    alarm_id VARCHAR(50) PRIMARY KEY,
    room_id VARCHAR(50) REFERENCES rooms(room_id),  -- 关联到房间表
    location VARCHAR(50) NOT NULL,              -- 位置：living_room/bedroom/kitchen等
    smoke_level FLOAT DEFAULT 0.0,              -- 烟雾浓度 (0-100)
    alarm_active BOOLEAN DEFAULT false,         -- 报警状态
    battery INTEGER DEFAULT 100,                -- 电池电量百分比
    test_mode BOOLEAN DEFAULT false,            -- 测试模式
    sensitivity VARCHAR(20) DEFAULT 'medium',   -- 灵敏度：low/medium/high
    installation_date TIMESTAMP,                -- 安装日期
    last_maintenance_date TIMESTAMP,            -- 最后维护日期
    device_model VARCHAR(100) DEFAULT 'SA-2024',-- 设备型号
    firmware_version VARCHAR(50) DEFAULT '1.0.0',-- 固件版本
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 烟雾报警器事件表
CREATE TABLE IF NOT EXISTS smoke_alarm_events (
    id SERIAL PRIMARY KEY,
    alarm_id VARCHAR(50) NOT NULL,
    event_type VARCHAR(32) NOT NULL,            -- ALARM_TRIGGERED/ALARM_CLEARED/TEST_STARTED/LOW_BATTERY等
    smoke_level FLOAT,                          -- 触发时的烟雾浓度
    detail TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 自动化响应规则表
CREATE TABLE IF NOT EXISTS smoke_alarm_response_rules (
    rule_id SERIAL PRIMARY KEY,
    rule_name VARCHAR(100) NOT NULL,
    alarm_id VARCHAR(50) REFERENCES smoke_alarm_state(alarm_id),
    room_id VARCHAR(50) REFERENCES rooms(room_id),
    trigger_condition VARCHAR(50),              -- smoke_level_threshold, alarm_triggered, battery_low
    condition_value FLOAT,                      -- 触发条件的值
    action_type VARCHAR(50),                    -- unlock_door, turn_off_ac, turn_on_lights, send_notification
    action_target VARCHAR(100),                 -- 目标设备ID
    action_params TEXT,                         -- JSON格式的操作参数
    enabled BOOLEAN DEFAULT true,
    priority INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 用户通知配置表
CREATE TABLE IF NOT EXISTS user_notification_config (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(50) NOT NULL UNIQUE,
    username VARCHAR(100),
    email VARCHAR(255),
    phone VARCHAR(20),
    notify_on_alarm BOOLEAN DEFAULT true,
    notify_on_low_battery BOOLEAN DEFAULT true,
    notify_on_maintenance_due BOOLEAN DEFAULT true,
    notification_channels TEXT,                 -- JSON: ["email", "sms", "push"]
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 通知历史表
CREATE TABLE IF NOT EXISTS notification_history (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(50) NOT NULL,
    alarm_id VARCHAR(50),
    notification_type VARCHAR(50),              -- alarm, low_battery, maintenance
    channel VARCHAR(20),                        -- email, sms, push
    subject VARCHAR(255),
    message TEXT,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'sent',          -- sent, failed, pending
    error_message TEXT
);

-- 设备维护记录表
CREATE TABLE IF NOT EXISTS device_maintenance (
    id SERIAL PRIMARY KEY,
    alarm_id VARCHAR(50) REFERENCES smoke_alarm_state(alarm_id),
    maintenance_type VARCHAR(50),               -- battery_replacement, cleaning, test, inspection
    performed_by VARCHAR(100),
    maintenance_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    next_maintenance_date TIMESTAMP,
    notes TEXT,
    cost DECIMAL(10, 2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 报警确认记录表
CREATE TABLE IF NOT EXISTS alarm_acknowledgments (
    id SERIAL PRIMARY KEY,
    alarm_id VARCHAR(50) NOT NULL,
    event_id INTEGER REFERENCES smoke_alarm_events(id),
    acknowledged_by VARCHAR(100) NOT NULL,
    acknowledged_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    response_time INTEGER,                      -- 响应时间（秒）
    action_taken TEXT,                          -- 采取的行动
    resolution VARCHAR(50),                     -- false_alarm, real_fire, resolved, under_investigation
    notes TEXT
);

-- 报警统计表（按天统计）
CREATE TABLE IF NOT EXISTS alarm_statistics (
    id SERIAL PRIMARY KEY,
    alarm_id VARCHAR(50),
    room_id VARCHAR(50),
    stat_date DATE,
    total_alarms INTEGER DEFAULT 0,
    false_alarms INTEGER DEFAULT 0,
    real_alarms INTEGER DEFAULT 0,
    avg_response_time INTEGER,                  -- 平均响应时间（秒）
    max_smoke_level FLOAT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(alarm_id, stat_date)
);

CREATE INDEX IF NOT EXISTS idx_lighting_events_light_time
ON lighting_events(light_id, timestamp DESC);

CREATE INDEX IF NOT EXISTS idx_smoke_alarm_events_alarm_time
ON smoke_alarm_events(alarm_id, timestamp DESC);

CREATE INDEX IF NOT EXISTS idx_smoke_alarm_rules_alarm
ON smoke_alarm_response_rules(alarm_id, enabled);

CREATE INDEX IF NOT EXISTS idx_notification_history_user_time
ON notification_history(user_id, sent_at DESC);

CREATE INDEX IF NOT EXISTS idx_device_maintenance_alarm
ON device_maintenance(alarm_id, maintenance_date DESC);

CREATE INDEX IF NOT EXISTS idx_alarm_ack_alarm_time
ON alarm_acknowledgments(alarm_id, acknowledged_at DESC);

-- 初始化灯具状态（统一房间命名）
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM lighting_state WHERE light_id = 'light_living_room') THEN
        INSERT INTO lighting_state (light_id, device_id, power, brightness, auto_mode, color_temp)
        VALUES ('light_living_room', 'living_room', false, 50, false, 4000);
    END IF;

    IF NOT EXISTS (SELECT 1 FROM lighting_state WHERE light_id = 'light_bedroom1') THEN
        INSERT INTO lighting_state (light_id, device_id, power, brightness, auto_mode, color_temp)
        VALUES ('light_bedroom1', 'bedroom1', false, 50, false, 4000);
    END IF;

    IF NOT EXISTS (SELECT 1 FROM lighting_state WHERE light_id = 'light_bedroom2') THEN
        INSERT INTO lighting_state (light_id, device_id, power, brightness, auto_mode, color_temp)
        VALUES ('light_bedroom2', 'bedroom2', false, 50, false, 4000);
    END IF;

    IF NOT EXISTS (SELECT 1 FROM lighting_state WHERE light_id = 'light_kitchen') THEN
        INSERT INTO lighting_state (light_id, device_id, power, brightness, auto_mode, color_temp)
        VALUES ('light_kitchen', 'kitchen', false, 50, false, 4000);
    END IF;

    IF NOT EXISTS (SELECT 1 FROM lighting_state WHERE light_id = 'light_study') THEN
        INSERT INTO lighting_state (light_id, device_id, power, brightness, auto_mode, color_temp)
        VALUES ('light_study', 'study', false, 50, false, 4000);
    END IF;
END $$;

CREATE INDEX IF NOT EXISTS idx_smoke_alarm_events_alarm_time
ON smoke_alarm_events(alarm_id, timestamp DESC);

-- 初始化烟雾报警器（统一房间命名）
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM smoke_alarm_state WHERE alarm_id = 'smoke_living_room') THEN
        INSERT INTO smoke_alarm_state (alarm_id, room_id, location, smoke_level, alarm_active, battery, sensitivity, installation_date, device_model, firmware_version)
        VALUES ('smoke_living_room', 'living_room', 'living_room', 0.0, false, 100, 'medium', NOW(), 'SA-2024-Pro', '1.0.0');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM smoke_alarm_state WHERE alarm_id = 'smoke_bedroom1') THEN
        INSERT INTO smoke_alarm_state (alarm_id, room_id, location, smoke_level, alarm_active, battery, sensitivity, installation_date, device_model, firmware_version)
        VALUES ('smoke_bedroom1', 'bedroom1', 'bedroom1', 0.0, false, 100, 'medium', NOW(), 'SA-2024-Pro', '1.0.0');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM smoke_alarm_state WHERE alarm_id = 'smoke_bedroom2') THEN
        INSERT INTO smoke_alarm_state (alarm_id, room_id, location, smoke_level, alarm_active, battery, sensitivity, installation_date, device_model, firmware_version)
        VALUES ('smoke_bedroom2', 'bedroom2', 'bedroom2', 0.0, false, 100, 'medium', NOW(), 'SA-2024-Pro', '1.0.0');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM smoke_alarm_state WHERE alarm_id = 'smoke_kitchen') THEN
        INSERT INTO smoke_alarm_state (alarm_id, room_id, location, smoke_level, alarm_active, battery, sensitivity, installation_date, device_model, firmware_version)
        VALUES ('smoke_kitchen', 'kitchen', 'kitchen', 0.0, false, 100, 'high', NOW(), 'SA-2024-Pro', '1.0.0');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM smoke_alarm_state WHERE alarm_id = 'smoke_study') THEN
        INSERT INTO smoke_alarm_state (alarm_id, room_id, location, smoke_level, alarm_active, battery, sensitivity, installation_date, device_model, firmware_version)
        VALUES ('smoke_study', 'study', 'study', 0.0, false, 100, 'medium', NOW(), 'SA-2024-Pro', '1.0.0');
    END IF;
END $$;

-- 插入示例自动化规则
-- 插入示例自动化响应规则（扩展版）
INSERT INTO smoke_alarm_response_rules (rule_name, alarm_id, room_id, trigger_condition, condition_value, action_type, action_target, action_params, enabled, priority, description)
VALUES
    -- 厨房规则（4条）
    ('厨房烟雾报警-自动解锁前门', 'smoke_kitchen', 'kitchen', 'alarm_triggered', 1, 'unlock_door', 'FRONT_DOOR', '{"reason": "emergency_evacuation", "auto_lock": false}', true, 2, '厨房发生火灾时自动解锁前门，方便紧急疏散'),
    ('厨房烟雾报警-关闭空调', 'smoke_kitchen', 'kitchen', 'alarm_triggered', 1, 'turn_off_ac', 'ac_kitchen', '{"prevent_smoke_spread": true}', true, 2, '关闭空调防止烟雾通过通风系统扩散'),
    ('厨房高浓度烟雾-开启全屋照明', 'smoke_kitchen', 'kitchen', 'smoke_level_threshold', 60.0, 'turn_on_lights', 'light_living_room,light_bedroom1,light_bedroom2,light_kitchen,light_study', '{"brightness": 100, "reason": "emergency_lighting"}', true, 2, '烟雾浓度超过60%时开启全屋照明指引逃生'),
    ('厨房中等烟雾-发送通知', 'smoke_kitchen', 'kitchen', 'smoke_level_threshold', 40.0, 'send_notification', 'admin', '{"message": "厨房烟雾浓度超过40%，请注意安全", "priority": "high"}', true, 1, '烟雾达到中等浓度时发送通知给管理员'),

    -- 客厅规则（3条）
    ('客厅烟雾报警-紧急照明', 'smoke_living_room', 'living_room', 'alarm_triggered', 1, 'turn_on_lights', 'light_living_room', '{"brightness": 100, "reason": "emergency_lighting"}', true, 2, '客厅报警时自动打开照明至最亮'),
    ('客厅烟雾报警-关闭空调', 'smoke_living_room', 'living_room', 'alarm_triggered', 1, 'turn_off_ac', 'ac_living_room', '{"prevent_smoke_spread": true}', true, 2, '关闭客厅空调防止烟雾扩散'),
    ('客厅烟雾报警-解锁前门', 'smoke_living_room', 'living_room', 'alarm_triggered', 1, 'unlock_door', 'FRONT_DOOR', '{"reason": "emergency_evacuation"}', true, 2, '客厅火灾时解锁前门方便逃生'),

    -- 卧室规则（4条）
    ('主卧烟雾报警-紧急照明', 'smoke_bedroom1', 'bedroom1', 'alarm_triggered', 1, 'turn_on_lights', 'light_bedroom1,light_living_room', '{"brightness": 100, "reason": "emergency_lighting"}', true, 2, '主卧报警时打开卧室和走廊照明'),
    ('主卧烟雾报警-解锁前门', 'smoke_bedroom1', 'bedroom1', 'alarm_triggered', 1, 'unlock_door', 'FRONT_DOOR', '{"reason": "emergency_evacuation"}', true, 2, '主卧火灾时解锁前门'),
    ('次卧烟雾报警-紧急照明', 'smoke_bedroom2', 'bedroom2', 'alarm_triggered', 1, 'turn_on_lights', 'light_bedroom2,light_living_room', '{"brightness": 100, "reason": "emergency_lighting"}', true, 2, '次卧报警时打开卧室和走廊照明'),
    ('次卧烟雾报警-解锁前门', 'smoke_bedroom2', 'bedroom2', 'alarm_triggered', 1, 'unlock_door', 'FRONT_DOOR', '{"reason": "emergency_evacuation"}', true, 2, '次卧火灾时解锁前门'),

    -- 书房规则（2条）
    ('书房烟雾报警-紧急照明', 'smoke_study', 'study', 'alarm_triggered', 1, 'turn_on_lights', 'light_study,light_living_room', '{"brightness": 100, "reason": "emergency_lighting"}', true, 2, '书房报警时打开照明'),
    ('书房烟雾报警-关闭空调', 'smoke_study', 'study', 'alarm_triggered', 1, 'turn_off_ac', 'ac_study', '{"prevent_smoke_spread": true}', true, 2, '关闭书房空调防止烟雾扩散'),

    -- 全局规则（3条）
    ('任意房间低电量-发送通知', NULL, NULL, 'battery_low', 20, 'send_notification', 'admin', '{"message": "烟雾报警器电量低于20%，请及时更换电池", "priority": "medium"}', true, 1, '任意报警器电量低时发送通知'),
    ('全屋严重烟雾-触发紧急警报', NULL, NULL, 'smoke_level_threshold', 80.0, 'trigger_alarm', NULL, '{"alarm_type": "fire_emergency", "sound_level": "high"}', true, 2, '任意房间烟雾浓度超过80%触发全屋警报'),
    ('全屋高浓度烟雾-全部解锁', NULL, NULL, 'smoke_level_threshold', 70.0, 'unlock_door', 'FRONT_DOOR', '{"reason": "critical_evacuation", "disable_auto_lock": true}', false, 2, '严重火灾时解锁所有门锁（默认禁用，需手动启用）');

-- 插入示例用户通知配置
INSERT INTO user_notification_config (user_id, username, email, phone, notify_on_alarm, notify_on_low_battery, notification_channels)
VALUES
    ('admin', '系统管理员', 'admin@smarthome.com', '13800138000', true, true, '["email", "sms"]'),
    ('user1', '张三', 'zhangsan@example.com', '13900139000', true, false, '["email"]');

-- 插入示例维护记录
-- 插入初始维护记录（最近2年的维护历史）
INSERT INTO device_maintenance (alarm_id, maintenance_type, performed_by, maintenance_date, next_maintenance_date, notes, cost)
VALUES
    -- 客厅烟雾报警器
    ('smoke_living_room', 'inspection', '技术人员-张三', NOW() - INTERVAL '730 days', NOW() - INTERVAL '365 days', '年度检查，设备状态良好', 50.00),
    ('smoke_living_room', 'cleaning', '技术人员-李四', NOW() - INTERVAL '365 days', NOW() + INTERVAL '365 days', '清洁传感器和外壳', 30.00),
    ('smoke_living_room', 'inspection', '技术人员-张三', NOW() - INTERVAL '30 days', NOW() + INTERVAL '335 days', '年度检查，设备状态良好', 50.00),

    -- 主卧烟雾报警器
    ('smoke_bedroom1', 'battery_replacement', '技术人员-王五', NOW() - INTERVAL '720 days', NOW() - INTERVAL '355 days', '更换9V电池', 15.00),
    ('smoke_bedroom1', 'cleaning', '技术人员-李四', NOW() - INTERVAL '540 days', NOW() - INTERVAL '175 days', '清洁传感器', 30.00),
    ('smoke_bedroom1', 'battery_replacement', '技术人员-王五', NOW() - INTERVAL '180 days', NOW() + INTERVAL '185 days', '更换9V电池', 15.00),
    ('smoke_bedroom1', 'test', '技术人员-张三', NOW() - INTERVAL '45 days', NOW() + INTERVAL '320 days', '测试报警功能正常', 0.00),

    -- 次卧烟雾报警器
    ('smoke_bedroom2', 'inspection', '技术人员-张三', NOW() - INTERVAL '700 days', NOW() - INTERVAL '335 days', '年度检查', 50.00),
    ('smoke_bedroom2', 'battery_replacement', '技术人员-王五', NOW() - INTERVAL '400 days', NOW() - INTERVAL '35 days', '更换电池', 15.00),
    ('smoke_bedroom2', 'cleaning', '技术人员-李四', NOW() - INTERVAL '200 days', NOW() + INTERVAL '165 days', '清洁设备', 30.00),
    ('smoke_bedroom2', 'battery_replacement', '技术人员-赵六', NOW() - INTERVAL '10 days', NOW() + INTERVAL '355 days', '紧急更换低电量电池', 15.00),

    -- 厨房烟雾报警器（维护频率最高）
    ('smoke_kitchen', 'inspection', '技术人员-张三', NOW() - INTERVAL '720 days', NOW() - INTERVAL '355 days', '年度检查', 50.00),
    ('smoke_kitchen', 'cleaning', '技术人员-李四', NOW() - INTERVAL '650 days', NOW() - INTERVAL '285 days', '清洁油烟污染', 30.00),
    ('smoke_kitchen', 'battery_replacement', '技术人员-王五', NOW() - INTERVAL '550 days', NOW() - INTERVAL '185 days', '更换电池', 15.00),
    ('smoke_kitchen', 'cleaning', '技术人员-李四', NOW() - INTERVAL '450 days', NOW() - INTERVAL '85 days', '清洁油烟污染', 30.00),
    ('smoke_kitchen', 'inspection', '技术人员-张三', NOW() - INTERVAL '365 days', NOW(), '年度检查，发现轻微油污', 50.00),
    ('smoke_kitchen', 'cleaning', '技术人员-李四', NOW() - INTERVAL '280 days', NOW() + INTERVAL '85 days', '深度清洁', 40.00),
    ('smoke_kitchen', 'battery_replacement', '技术人员-王五', NOW() - INTERVAL '190 days', NOW() + INTERVAL '175 days', '更换电池', 15.00),
    ('smoke_kitchen', 'test', '技术人员-赵六', NOW() - INTERVAL '90 days', NOW() + INTERVAL '275 days', '测试高温环境下的性能', 0.00),
    ('smoke_kitchen', 'cleaning', '技术人员-李四', NOW() - INTERVAL '20 days', NOW() + INTERVAL '345 days', '清洁油烟污染', 30.00),

    -- 书房烟雾报警器
    ('smoke_study', 'inspection', '技术人员-张三', NOW() - INTERVAL '710 days', NOW() - INTERVAL '345 days', '年度检查', 50.00),
    ('smoke_study', 'battery_replacement', '技术人员-王五', NOW() - INTERVAL '500 days', NOW() - INTERVAL '135 days', '更换电池', 15.00),
    ('smoke_study', 'cleaning', '技术人员-李四', NOW() - INTERVAL '300 days', NOW() + INTERVAL '65 days', '清洁灰尘', 30.00),
    ('smoke_study', 'inspection', '技术人员-张三', NOW() - INTERVAL '60 days', NOW() + INTERVAL '305 days', '年度检查，设备良好', 50.00);

-- 插入初始化事件
INSERT INTO lighting_events (light_id, event_type, detail)
VALUES
    ('light_living_room', 'INIT', 'Lighting initialized'),
    ('light_bedroom1', 'INIT', 'Lighting initialized'),
    ('light_bedroom2', 'INIT', 'Lighting initialized'),
    ('light_kitchen', 'INIT', 'Lighting initialized'),
    ('light_study', 'INIT', 'Lighting initialized');
INSERT INTO smoke_alarm_events (alarm_id, event_type, smoke_level, detail)
VALUES
    ('smoke_living_room', 'INIT', 0.0, 'Smoke alarm initialized'),
    ('smoke_bedroom1', 'INIT', 0.0, 'Smoke alarm initialized'),
    ('smoke_bedroom2', 'INIT', 0.0, 'Smoke alarm initialized'),
    ('smoke_kitchen', 'INIT', 0.0, 'Smoke alarm initialized'),
    ('smoke_study', 'INIT', 0.0, 'Smoke alarm initialized');

-- 插入历史报警事件数据（最近30天）
-- 厨房：10次报警（7次真实报警，3次误报）
INSERT INTO smoke_alarm_events (alarm_id, event_type, smoke_level, detail, timestamp)
VALUES
    -- 厨房真实报警 #1
    ('smoke_kitchen', 'ALARM_TRIGGERED', 85.5, 'High smoke detected - cooking', NOW() - INTERVAL '25 days' - INTERVAL '10 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 8.2, 'Smoke cleared', NOW() - INTERVAL '25 days' - INTERVAL '9 hours 45 minutes'),
    -- 厨房误报 #1
    ('smoke_kitchen', 'ALARM_TRIGGERED', 45.3, 'False alarm - steam from cooking', NOW() - INTERVAL '22 days' - INTERVAL '18 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 3.1, 'Cleared quickly', NOW() - INTERVAL '22 days' - INTERVAL '17 hours 50 minutes'),
    -- 厨房真实报警 #2
    ('smoke_kitchen', 'ALARM_TRIGGERED', 92.7, 'Serious smoke - burnt food', NOW() - INTERVAL '18 days' - INTERVAL '12 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 12.5, 'Ventilation restored', NOW() - INTERVAL '18 days' - INTERVAL '11 hours 30 minutes'),
    -- 厨房真实报警 #3
    ('smoke_kitchen', 'ALARM_TRIGGERED', 78.9, 'Smoke from stove', NOW() - INTERVAL '15 days' - INTERVAL '19 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 6.8, 'Smoke cleared', NOW() - INTERVAL '15 days' - INTERVAL '18 hours 40 minutes'),
    -- 厨房误报 #2
    ('smoke_kitchen', 'ALARM_TRIGGERED', 38.2, 'Steam mistaken as smoke', NOW() - INTERVAL '12 days' - INTERVAL '9 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 2.5, 'Cleared', NOW() - INTERVAL '12 days' - INTERVAL '8 hours 55 minutes'),
    -- 厨房真实报警 #4
    ('smoke_kitchen', 'ALARM_TRIGGERED', 88.4, 'Toaster smoke', NOW() - INTERVAL '8 days' - INTERVAL '7 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 9.7, 'Cleared', NOW() - INTERVAL '8 days' - INTERVAL '6 hours 50 minutes'),
    -- 厨房真实报警 #5
    ('smoke_kitchen', 'ALARM_TRIGGERED', 95.2, 'Heavy smoke - oven', NOW() - INTERVAL '5 days' - INTERVAL '14 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 11.3, 'Cleared', NOW() - INTERVAL '5 days' - INTERVAL '13 hours 45 minutes'),
    -- 厨房误报 #3
    ('smoke_kitchen', 'ALARM_TRIGGERED', 42.1, 'False alarm', NOW() - INTERVAL '3 days' - INTERVAL '16 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 4.2, 'Cleared', NOW() - INTERVAL '3 days' - INTERVAL '15 hours 58 minutes'),
    -- 厨房真实报警 #6
    ('smoke_kitchen', 'ALARM_TRIGGERED', 81.6, 'Cooking smoke', NOW() - INTERVAL '2 days' - INTERVAL '11 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 7.9, 'Cleared', NOW() - INTERVAL '2 days' - INTERVAL '10 hours 55 minutes'),
    -- 厨房真实报警 #7
    ('smoke_kitchen', 'ALARM_TRIGGERED', 87.3, 'Pan smoke', NOW() - INTERVAL '1 day' - INTERVAL '8 hours'),
    ('smoke_kitchen', 'ALARM_CLEARED', 8.5, 'Cleared', NOW() - INTERVAL '1 day' - INTERVAL '7 hours 50 minutes'),

    -- 客厅：3次报警（2次真实，1次误报）
    ('smoke_living_room', 'ALARM_TRIGGERED', 72.4, 'Smoke detected', NOW() - INTERVAL '20 days' - INTERVAL '15 hours'),
    ('smoke_living_room', 'ALARM_CLEARED', 5.3, 'Cleared', NOW() - INTERVAL '20 days' - INTERVAL '14 hours 40 minutes'),
    ('smoke_living_room', 'ALARM_TRIGGERED', 35.8, 'False alarm - dust', NOW() - INTERVAL '10 days' - INTERVAL '13 hours'),
    ('smoke_living_room', 'ALARM_CLEARED', 2.1, 'Cleared', NOW() - INTERVAL '10 days' - INTERVAL '12 hours 58 minutes'),
    ('smoke_living_room', 'ALARM_TRIGGERED', 68.9, 'Candle smoke', NOW() - INTERVAL '4 days' - INTERVAL '20 hours'),
    ('smoke_living_room', 'ALARM_CLEARED', 6.2, 'Cleared', NOW() - INTERVAL '4 days' - INTERVAL '19 hours 45 minutes'),

    -- 主卧：2次报警（1次真实，1次误报）
    ('smoke_bedroom1', 'ALARM_TRIGGERED', 55.7, 'Smoke from adjacent room', NOW() - INTERVAL '14 days' - INTERVAL '22 hours'),
    ('smoke_bedroom1', 'ALARM_CLEARED', 4.5, 'Cleared', NOW() - INTERVAL '14 days' - INTERVAL '21 hours 50 minutes'),
    ('smoke_bedroom1', 'ALARM_TRIGGERED', 32.3, 'False alarm - dust', NOW() - INTERVAL '6 days' - INTERVAL '5 hours'),
    ('smoke_bedroom1', 'ALARM_CLEARED', 1.8, 'Cleared', NOW() - INTERVAL '6 days' - INTERVAL '4 hours 58 minutes'),

    -- 次卧：1次误报
    ('smoke_bedroom2', 'ALARM_TRIGGERED', 28.5, 'False alarm', NOW() - INTERVAL '16 days' - INTERVAL '11 hours'),
    ('smoke_bedroom2', 'ALARM_CLEARED', 1.5, 'Cleared', NOW() - INTERVAL '16 days' - INTERVAL '10 hours 57 minutes'),

    -- 书房：1次真实报警
    ('smoke_study', 'ALARM_TRIGGERED', 64.2, 'Smoke detected', NOW() - INTERVAL '9 days' - INTERVAL '17 hours'),
    ('smoke_study', 'ALARM_CLEARED', 5.8, 'Cleared', NOW() - INTERVAL '9 days' - INTERVAL '16 hours 48 minutes');

-- 插入报警确认记录（部分已确认，部分未确认）
INSERT INTO alarm_acknowledgments (alarm_id, event_id, acknowledged_by, acknowledged_at, response_time, action_taken, resolution, notes)
SELECT
    e.alarm_id,
    e.id,
    CASE
        WHEN e.alarm_id = 'smoke_kitchen' AND e.timestamp < NOW() - INTERVAL '10 days' THEN '张三'
        WHEN e.alarm_id = 'smoke_living_room' AND e.timestamp < NOW() - INTERVAL '5 days' THEN '李四'
        WHEN e.alarm_id = 'smoke_bedroom1' AND e.timestamp < NOW() - INTERVAL '8 days' THEN '王五'
        WHEN e.alarm_id = 'smoke_study' THEN '张三'
        ELSE NULL
    END,
    e.timestamp + INTERVAL '3 minutes',
    FLOOR(RANDOM() * 180 + 120)::INTEGER,
    CASE
        WHEN e.alarm_id = 'smoke_kitchen' THEN '关闭烟源，开启排风扇'
        WHEN e.alarm_id = 'smoke_living_room' THEN '打开窗户通风'
        WHEN e.alarm_id = 'smoke_bedroom1' THEN '检查来源，通风处理'
        WHEN e.alarm_id = 'smoke_study' THEN '熄灭烟源，通风'
        ELSE '现场检查'
    END,
    CASE
        WHEN e.smoke_level > 40 AND e.alarm_id = 'smoke_kitchen' THEN 'real_fire'
        WHEN e.smoke_level <= 40 THEN 'false_alarm'
        ELSE 'resolved'
    END,
    CASE
        WHEN e.smoke_level > 40 THEN '真实报警，已处理'
        ELSE '误报，已确认'
    END
FROM smoke_alarm_events e
WHERE e.event_type = 'ALARM_TRIGGERED'
    AND e.timestamp < NOW() - INTERVAL '3 days'
    AND e.alarm_id IN ('smoke_kitchen', 'smoke_living_room', 'smoke_bedroom1', 'smoke_study')
LIMIT 12;

-- 插入报警统计数据（最近30天，按天统计）
INSERT INTO alarm_statistics (alarm_id, room_id, stat_date, total_alarms, false_alarms, real_alarms, avg_response_time, max_smoke_level)
VALUES
    -- 厨房统计（10次报警）
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '25 days', 1, 0, 1, 180, 85.5),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '22 days', 1, 1, 0, 150, 45.3),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '18 days', 1, 0, 1, 195, 92.7),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '15 days', 1, 0, 1, 165, 78.9),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '12 days', 1, 1, 0, 140, 38.2),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '8 days', 1, 0, 1, 175, 88.4),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '5 days', 1, 0, 1, 188, 95.2),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '3 days', 1, 1, 0, 135, 42.1),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '2 days', 1, 0, 1, 170, 81.6),
    ('smoke_kitchen', 'kitchen', CURRENT_DATE - INTERVAL '1 day', 1, 0, 1, 160, 87.3),

    -- 客厅统计（3次报警）
    ('smoke_living_room', 'living_room', CURRENT_DATE - INTERVAL '20 days', 1, 0, 1, 185, 72.4),
    ('smoke_living_room', 'living_room', CURRENT_DATE - INTERVAL '10 days', 1, 1, 0, 125, 35.8),
    ('smoke_living_room', 'living_room', CURRENT_DATE - INTERVAL '4 days', 1, 0, 1, 172, 68.9),

    -- 主卧统计（2次报警）
    ('smoke_bedroom1', 'bedroom1', CURRENT_DATE - INTERVAL '14 days', 1, 0, 1, 168, 55.7),
    ('smoke_bedroom1', 'bedroom1', CURRENT_DATE - INTERVAL '6 days', 1, 1, 0, 132, 32.3),

    -- 次卧统计（1次误报）
    ('smoke_bedroom2', 'bedroom2', CURRENT_DATE - INTERVAL '16 days', 1, 1, 0, 128, 28.5),

    -- 书房统计（1次真实报警）
    ('smoke_study', 'study', CURRENT_DATE - INTERVAL '9 days', 1, 0, 1, 178, 64.2);

-- 完成提示
SELECT '✓ Database initialization completed!' AS status;
SELECT 'Database: smart_home' AS info;
SELECT 'Tables: temperature_humidity_data, lock_state, lock_events, ac_state, ac_events, lighting_state, lighting_events, smoke_alarm_state, smoke_alarm_events' AS info;
SELECT 'Rooms: living_room, bedroom1, bedroom2, kitchen, study' AS info;
SELECT 'Devices: ac_living_room, ac_bedroom1, ac_bedroom2, ac_kitchen, ac_study, light_living_room, light_bedroom1, light_bedroom2, light_kitchen, light_study, smoke_living_room, smoke_bedroom1, smoke_bedroom2, smoke_kitchen, smoke_study' AS info;
SELECT COUNT(*) || ' test records inserted' AS info FROM temperature_humidity_data;
